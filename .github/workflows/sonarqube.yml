name: Test with sonarqube

on:
  workflow_dispatch:
  pull_request:
    branches:
      - sonarqube
    types: ['opened', 'edited', 'reopened', 'synchronize']

jobs:
  build:
    name: Build and analyze with sonarqube
    runs-on: ubuntu-latest

    steps:
    - name: Setting environment variables.
      run: |
        echo "AWS_DEFAULT_REGION=us-west-2" >> $GITHUB_ENV

    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        cache: maven
        distribution: corretto
        java-version: 8
    - run: echo "JAVA_8=$JAVA_HOME" >> $GITHUB_ENV

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        cache: maven
        distribution: corretto
        java-version: 11
    - run: echo "JAVA_11=$JAVA_HOME" >> $GITHUB_ENV

    - name: Cache SonarQube packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Set up maven
      uses: whelk-io/maven-settings-xml-action@v20
      with:
        output_file: $HOME/.m2/settings.xml
        repositories: >
          [
            {
              "id": "github-packages",
              "url": "https://maven.pkg.github.com/aboveproperty/*"
            }
          ]
        servers: '[{
            "id": "github-packages",
            "username": "${{ secrets.GH_USERNAME }}",
            "password": "${{ secrets.GH_PASSWORD }}"
          },{
            "id": "dev-nexus-abvprp",
            "username": "${{ secrets.NEXUS_USERNAME }}",
            "password": "${{ secrets.NEXUS_PASSWORD }}"
          }, {
            "id": "github",
            "username": "${{ github.actor }}",
            "password": "${{ secrets.GITHUB_TOKEN }}"
          }]'
        mirrors: >
          [
            {
              "id": "dev-nexus-abvprp",
              "name": "Above Property Nexus",
              "mirrorOf": "external:*,!github-packages",
              "url": "https://nexus.dev.abvprp.com/repository/Public-Repositories/"
            }
          ]

    - name: Get Github actions IP address
      id: ip
      uses: haythem/public-ip@v1.2

    - name: Add Github Actions IP address to Sonar security group
      run: |
        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.GH_ACTIONS_AWS_SG_ID }} --protocol tcp --port 443 --cidr ${{ steps.ip.outputs.ipv4 }}/32
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.SG_UPDATE_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SG_UPDATE_AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}

    - name: Build the jar
      env:
        JAVA_HOME: ${{ env.JAVA_8 }}
      run: mvn --no-transfer-progress -DskipTests=true clean verify

    - name: Analyze code and dependencies
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        JAVA_HOME: ${{ env.JAVA_11 }}
      run: mvn --no-transfer-progress -B org.owasp:dependency-check-maven:check -Dformats=html,json -DskipTests=true org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}

    - name: Remove Github Actions IP address from Sonar security group
      run: |
        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.GH_ACTIONS_AWS_SG_ID }} --protocol tcp --port 443 --cidr ${{ steps.ip.outputs.ipv4 }}/32
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.SG_UPDATE_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SG_UPDATE_AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
      if: always()
